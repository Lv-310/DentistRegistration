USE LV_310_DENTISTRY;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'USERS')
BEGIN
	IF NOT EXISTS ( SELECT * FROM   INFORMATION_SCHEMA.COLUMNS
          WHERE COLUMN_NAME = 'ID_ROLE')
	BEGIN
		ALTER TABLE USERS
		ADD ID_ROLE INT NOT NULL DEFAULT(1),
		CONSTRAINT FK_USERS_ROLE_INFO FOREIGN KEY(ID_ROLE)
		REFERENCES ROLE_INFO(ROLE_ID);
	END
END

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOCTORS')
BEGIN
	IF NOT EXISTS ( SELECT * FROM   INFORMATION_SCHEMA.COLUMNS
          WHERE COLUMN_NAME = 'ID_ROLE')
	  PRINT('Adding column id_role to Doctors')
	BEGIN
		ALTER TABLE DOCTORS
		ADD ID_ROLE INT NOT NULL DEFAULT(2),
		CONSTRAINT FK_DOCTORS_ROLE_INFO FOREIGN KEY(ID_ROLE)
		REFERENCES ROLE_INFO(ROLE_ID);
	END
END

GO

IF object_id('spAddUser') IS NULL
    EXEC ('create procedure dbo.spAddUser as select 1')
GO
ALTER PROCEDURE spAddUser
@FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @USER_PASSWORD NVARCHAR(MAX), @EMAIL VARCHAR(320), @ID_ROLE INT
AS
BEGIN
INSERT INTO USERS(FIRSTNAME, LASTNAME, PHONENUM, USER_PASSWORD, EMAIL, ID_ROLE)
VALUES (@FIRSTNAME, @LASTNAME, @PHONENUM, @USER_PASSWORD, @EMAIL, @ID_ROLE)
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'USER_DOCTOR')
BEGIN
	ALTER TABLE USER_DOCTOR
	DROP CONSTRAINT FK_USER_DOCTOR_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'PATIENTCARDS')
BEGIN
	ALTER TABLE PATIENTCARDS
	DROP CONSTRAINT FK_PATIENTCARDS_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOCTOR_RULE')
BEGIN
	ALTER TABLE DOCTOR_RULE
	DROP CONSTRAINT FK_DOCTOR_RULE_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOC_TIMESLOT')
BEGIN
	ALTER TABLE DOC_TIMESLOT
	DROP CONSTRAINT FK_DOC_TIMESLOT_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOC_RECEPTION')
BEGIN
	ALTER TABLE DOC_RECEPTION
	DROP CONSTRAINT FK_DOC_RECEPTION_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'CALENDAR_EVENT')
BEGIN
	ALTER TABLE CALENDAR_EVENT
	DROP CONSTRAINT FK_CALENDAR_EVENT_DOCTORS;
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOCTORS')
BEGIN
	ALTER TABLE DOCTORS
	DROP CONSTRAINT PK_DOCTORS;
	ALTER TABLE DOCTORS
	DROP COLUMN ID_DOCTOR;
	ALTER TABLE DOCTORS
	ADD ID_DOCTOR INT IDENTITY(1,1) CONSTRAINT PK_DOCTORS PRIMARY KEY(ID_DOCTOR);
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'USER_DOCTOR')
BEGIN
	ALTER TABLE USER_DOCTOR    
	ADD CONSTRAINT FK_USER_DOCTOR_DOCTORS FOREIGN KEY (DOCTOR_ID)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'PATIENTCARDS')
BEGIN
	ALTER TABLE PATIENTCARDS    
	ADD CONSTRAINT FK_PATIENTCARDS_DOCTORS FOREIGN KEY (DOCTOR_ID)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOCTOR_RULE')
BEGIN
	ALTER TABLE DOCTOR_RULE    
	ADD CONSTRAINT FK_DOCTOR_RULE_DOCTORS FOREIGN KEY (DOCTOR_ID)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOC_TIMESLOT')
BEGIN
	ALTER TABLE DOC_TIMESLOT    
	ADD CONSTRAINT FK_DOC_TIMESLOT_DOCTORS FOREIGN KEY (DOCTOR_ID)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOC_RECEPTION')
BEGIN
	ALTER TABLE DOC_RECEPTION    
	ADD CONSTRAINT FK_DOC_RECEPTION_DOCTORS FOREIGN KEY (DOCTOR_ID)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'CALENDAR_EVENT')
BEGIN
	ALTER TABLE CALENDAR_EVENT    
	ADD CONSTRAINT FK_CALENDAR_EVENT_DOCTORS FOREIGN KEY (ID_DOCTOR)     
    REFERENCES DOCTORS (ID_DOCTOR)     
    ON DELETE CASCADE    
END;

GO

IF object_id('spAddDoctor') IS NULL
    EXEC ('create procedure dbo.spAddDoctor as select 1')
GO
ALTER PROCEDURE spAddDoctor
@FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @CABNUM TINYINT, @SPECIALITY VARCHAR(30), @DOC_PASSWORD NVARCHAR(MAX), @ID_ROLE INT
AS
BEGIN
INSERT INTO DOCTORS(FIRSTNAME, LASTNAME, PHONENUM, CABNUM, SPECIALITY, DOC_PASSWORD, ID_ROLE)
VALUES (@FIRSTNAME, @LASTNAME, @PHONENUM, @CABNUM, @SPECIALITY, @DOC_PASSWORD, @ID_ROLE)
END;

GO

IF object_id('spCheckDoctor') IS NULL
    EXEC ('create procedure dbo.spCheckDoctor as select 1')
GO
ALTER PROCEDURE spCheckDoctor
@PHONENUM BIGINT, @COUNT INT OUTPUT
AS
BEGIN
SELECT @COUNT = count(*) 
FROM DOCTORS 
WHERE PHONENUM = @PHONENUM
END;

GO
