CREATE DATABASE LV_310_DENTISTRY
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[ROLE_INFO]    Script Date: 21.05.2018 23:47:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ROLE_INFO](
	[ROLE_ID] [int] IDENTITY(1,1) NOT NULL,
	[ROLE_NAME] [varchar](30) NOT NULL,
 CONSTRAINT [PK_ROLE_ID] PRIMARY KEY CLUSTERED 
(
	[ROLE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

INSERT INTO [dbo].[ROLE_INFO] (ROLE_NAME) VALUES ('user'), ('doctor'), ('admin')

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[ADMINS]    Script Date: 21.05.2018 23:42:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[ADMINS](
	[ID_ADMIN] [int] IDENTITY(1,1) NOT NULL,
	[FIRSTNAME] [varchar](30) NOT NULL,
	[LASTNAME] [varchar](30) NOT NULL,
	[PHONENUM] [bigint] NOT NULL,
	[ADMIN_PASSWORD] [nvarchar](max) NOT NULL,
	[ID_ROLE] [int] NOT NULL,
 CONSTRAINT [PK_ADMINS] PRIMARY KEY CLUSTERED 
(
	[ID_ADMIN] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[ADMINS] ADD  DEFAULT ((3)) FOR [ID_ROLE]
GO

ALTER TABLE [dbo].[ADMINS]  WITH CHECK ADD  CONSTRAINT [FK_ADMINS_ROLE_INFO] FOREIGN KEY([ID_ROLE])
REFERENCES [dbo].[ROLE_INFO] ([ROLE_ID])
GO

USE [LV_310_DENTISTRY]
GO

USE [LV_310_DENTISTRY]
GO


/****** Object:  Table [dbo].[DOCTORS]    Script Date: 21.05.2018 23:43:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[DOCTORS](
	[FIRSTNAME] [varchar](30) NOT NULL,
	[LASTNAME] [varchar](30) NOT NULL,
	[PHONENUM] [bigint] NOT NULL,
	[CABNUM] [tinyint] NOT NULL,
	[SPECIALITY] [varchar](30) NOT NULL,
	[DOC_PASSWORD] [nvarchar](max) NOT NULL,
	[ID_ROLE] [int] NOT NULL,
	[ID_DOCTOR] [int] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_DOCTORS] PRIMARY KEY CLUSTERED 
(
	[ID_DOCTOR] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[DOCTORS] ADD  DEFAULT ((2)) FOR [ID_ROLE]
GO

ALTER TABLE [dbo].[DOCTORS]  WITH CHECK ADD  CONSTRAINT [FK_DOCTORS_ROLE_INFO] FOREIGN KEY([ID_ROLE])
REFERENCES [dbo].[ROLE_INFO] ([ROLE_ID])
GO

ALTER TABLE [dbo].[DOCTORS] CHECK CONSTRAINT [FK_DOCTORS_ROLE_INFO]
GO

/****** Object:  Table [dbo].[USERS]    Script Date: 21.05.2018 23:51:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[USERS](
	[FIRSTNAME] [varchar](30) NOT NULL,
	[LASTNAME] [varchar](30) NOT NULL,
	[PHONENUM] [bigint] NOT NULL,
	[USER_PASSWORD] [nvarchar](max) NOT NULL,
	[EMAIL] [varchar](320) NOT NULL,
	[ID_USER] [int] IDENTITY(1,1) NOT NULL,
	[ID_ROLE] [int] NOT NULL,
 CONSTRAINT [PK_USERS] PRIMARY KEY CLUSTERED 
(
	[ID_USER] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[USERS] ADD  DEFAULT ((1)) FOR [ID_ROLE]
GO

ALTER TABLE [dbo].[USERS]  WITH CHECK ADD  CONSTRAINT [FK_USERS_ROLE_INFO] FOREIGN KEY([ID_ROLE])
REFERENCES [dbo].[ROLE_INFO] ([ROLE_ID])
GO

ALTER TABLE [dbo].[USERS] CHECK CONSTRAINT [FK_USERS_ROLE_INFO]
GO

USE [LV_310_DENTISTRY]
GO


/****** Object:  Table [dbo].[CALENDAR_EVENT]    Script Date: 21.05.2018 23:43:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CALENDAR_EVENT](
	[EVENT_ID] [int] IDENTITY(1,1) NOT NULL,
	[ID_DOCTOR] [int] NOT NULL,
	[USER_ID] [int] NOT NULL,
	[TITLE] [varchar](30) NOT NULL,
	[DESCRIPTIO] [varchar](100) NOT NULL,
	[START_EVENT] [datetime] NOT NULL,
	[END_EVENT] [datetime] NOT NULL,
	[IS_BOOKED] [bit] NOT NULL,
 CONSTRAINT [PK_EVENT] PRIMARY KEY CLUSTERED 
(
	[EVENT_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[CALENDAR_EVENT]  WITH CHECK ADD  CONSTRAINT [FK_CALENDAR_EVENT_DOCTORS] FOREIGN KEY([ID_DOCTOR])
REFERENCES [dbo].[DOCTORS] ([ID_DOCTOR])
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[CALENDAR_EVENT] CHECK CONSTRAINT [FK_CALENDAR_EVENT_DOCTORS]
GO

ALTER TABLE [dbo].[CALENDAR_EVENT]  WITH CHECK ADD  CONSTRAINT [FK_CALENDAR_EVENT_USERS] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[USERS] ([ID_USER])
GO

ALTER TABLE [dbo].[CALENDAR_EVENT] CHECK CONSTRAINT [FK_CALENDAR_EVENT_USERS]
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[PATIENTCARDS]    Script Date: 21.05.2018 23:44:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PATIENTCARDS](
	[DOCTOR_ID] [int] NOT NULL,
	[USER_ID] [int] NOT NULL,
	[NOTE_ID] [int] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[PATIENTCARDS]  WITH CHECK ADD  CONSTRAINT [FK_PATIENTCARDS_DOCTORS] FOREIGN KEY([DOCTOR_ID])
REFERENCES [dbo].[DOCTORS] ([ID_DOCTOR])
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[PATIENTCARDS] CHECK CONSTRAINT [FK_PATIENTCARDS_DOCTORS]
GO

ALTER TABLE [dbo].[PATIENTCARDS]  WITH CHECK ADD  CONSTRAINT [FK_PATIENTCARDS_USERS] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[USERS] ([ID_USER])
ON UPDATE CASCADE
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[PATIENTCARDS] CHECK CONSTRAINT [FK_PATIENTCARDS_USERS]
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[SERVICES]    Script Date: 21.05.2018 23:50:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[SERVICES](
	[ID_SERVICE] [int] IDENTITY(1,1) NOT NULL,
	[NAME_SERVICE] [nvarchar](50) NOT NULL,
	[DESCRIPTION_SERVICE] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_SERVICES] PRIMARY KEY CLUSTERED 
(
	[ID_SERVICE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

USE [LV_310_DENTISTRY]
GO


/****** Object:  Table [dbo].[PRICES]    Script Date: 21.05.2018 23:47:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PRICES](
	[ID_PRICE] [int] IDENTITY(1,1) NOT NULL,
	[PRICE] [int] NOT NULL,
	[DATE_START_PRICE] [date] NOT NULL,
	[SERVICE_ID] [int] NOT NULL,
 CONSTRAINT [PK_PRICES] PRIMARY KEY CLUSTERED 
(
	[ID_PRICE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[PRICES]  WITH CHECK ADD  CONSTRAINT [FK_SERVICES] FOREIGN KEY([SERVICE_ID])
REFERENCES [dbo].[SERVICES] ([ID_SERVICE])
GO

ALTER TABLE [dbo].[PRICES] CHECK CONSTRAINT [FK_SERVICES]
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[USER_DOCTOR]    Script Date: 21.05.2018 23:50:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[USER_DOCTOR](
	[USER_ID] [int] NOT NULL,
	[DOCTOR_ID] [int] NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[USER_DOCTOR]  WITH CHECK ADD  CONSTRAINT [FK_USER_DOCTOR_DOCTORS] FOREIGN KEY([DOCTOR_ID])
REFERENCES [dbo].[DOCTORS] ([ID_DOCTOR])
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[USER_DOCTOR] CHECK CONSTRAINT [FK_USER_DOCTOR_DOCTORS]
GO

ALTER TABLE [dbo].[USER_DOCTOR]  WITH CHECK ADD  CONSTRAINT [FK_USER_DOCTOR_USERS] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[USERS] ([ID_USER])
ON UPDATE CASCADE
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[USER_DOCTOR] CHECK CONSTRAINT [FK_USER_DOCTOR_USERS]
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  Table [dbo].[VERSION]    Script Date: 21.05.2018 23:51:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[VERSION](
	[ID] [int] NOT NULL,
	[VERSION_NUM] [varchar](30) NOT NULL,
 CONSTRAINT [PK_VERSION] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

INSERT INTO VERSION VALUES (1,'1.0.0.0')

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spAddDoctor]    Script Date: 22.05.2018 0:03:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spAddDoctor]
@FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @CABNUM TINYINT, @SPECIALITY VARCHAR(30), @DOC_PASSWORD NVARCHAR(MAX), @ID_ROLE INT
AS
BEGIN
INSERT INTO DOCTORS(FIRSTNAME, LASTNAME, PHONENUM, CABNUM, SPECIALITY, DOC_PASSWORD, ID_ROLE)
VALUES (@FIRSTNAME, @LASTNAME, @PHONENUM, @CABNUM, @SPECIALITY, @DOC_PASSWORD, @ID_ROLE)
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spAddEvent]    Script Date: 22.05.2018 0:03:50 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spAddEvent]
@DOCTOR_ID INT, @USER_ID INT, @TITLE VARCHAR(30), @DESCRIPTIO VARCHAR(100),
 @START_EVENT DATETIME, @END_EVENT DATETIME, @IS_BOOKED BIT
AS
BEGIN
INSERT INTO CALENDAR_EVENT(ID_DOCTOR, USER_ID, TITLE, DESCRIPTIO, START_EVENT, END_EVENT, IS_BOOKED)
VALUES (@DOCTOR_ID, @USER_ID, @TITLE, @DESCRIPTIO, @START_EVENT, @END_EVENT, @IS_BOOKED)
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spAddUser]    Script Date: 22.05.2018 0:04:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spAddUser]
@FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @USER_PASSWORD NVARCHAR(MAX), @EMAIL VARCHAR(320), @ID_ROLE INT
AS
BEGIN
INSERT INTO USERS(FIRSTNAME, LASTNAME, PHONENUM, USER_PASSWORD, EMAIL, ID_ROLE)
VALUES (@FIRSTNAME, @LASTNAME, @PHONENUM, @USER_PASSWORD, @EMAIL, @ID_ROLE)
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckDate]    Script Date: 22.05.2018 0:04:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckDate]
@DATE_START_PRICE DATE, @RESULT BIT OUTPUT
AS
BEGIN
IF (@DATE_START_PRICE > (select cast(getdate() as date)))
	set @Result=1
ELSE set @Result=0
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckDateForEdit]    Script Date: 22.05.2018 0:04:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckDateForEdit]
@DATE_START_PRICE DATE, @RESULT NVARCHAR(30) OUTPUT
AS
BEGIN
IF (@DATE_START_PRICE > (select cast(getdate() as date)))
	set @Result='edit'
ELSE IF (@DATE_START_PRICE = (select cast(getdate() as date)))
	set @Result='add'
ELSE set @Result='false'
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckDoctor]    Script Date: 22.05.2018 0:04:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckDoctor]
@PHONENUM BIGINT, @COUNT INT OUTPUT
AS
BEGIN
SELECT @COUNT = count(*) 
FROM DOCTORS 
WHERE PHONENUM = @PHONENUM
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckEvent]    Script Date: 22.05.2018 0:04:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckEvent]
@START_EVENT DATETIME, @DOCTOR_ID INT, @COUNT INT OUTPUT
AS
BEGIN
SELECT @COUNT = count(*) 
FROM CALENDAR_EVENT 
WHERE @START_EVENT = START_EVENT and @DOCTOR_ID = ID_DOCTOR
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckLogin]    Script Date: 22.05.2018 0:04:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckLogin]
@PHONENUM BIGINT, @USER_PASSWORD NVARCHAR(MAX) OUTPUT,@ID_USER INT OUTPUT,@FIRSTNAME VARCHAR(30) OUTPUT, @LASTNAME VARCHAR(30) OUTPUT, @ROLE VARCHAR(30) OUTPUT
AS
BEGIN

IF (SELECT COUNT(PHONENUM) FROM ADMINS WHERE PHONENUM = @PHONENUM) = 1
BEGIN
SELECT @USER_PASSWORD = ADMIN_PASSWORD , @ID_USER = ID_ADMIN , @FIRSTNAME=FIRSTNAME , @LASTNAME=LASTNAME , @ROLE = 'admin'
FROM ADMINS
WHERE PHONENUM = @PHONENUM
END

IF (SELECT COUNT(PHONENUM) FROM DOCTORS WHERE PHONENUM = @PHONENUM) = 1
BEGIN
SELECT @USER_PASSWORD = DOC_PASSWORD , @ID_USER = ID_DOCTOR , @FIRSTNAME=FIRSTNAME , @LASTNAME=LASTNAME , @ROLE = 'doctor'
FROM DOCTORS 
WHERE PHONENUM = @PHONENUM
END

IF (SELECT COUNT(PHONENUM) FROM USERS WHERE PHONENUM = @PHONENUM) = 1
BEGIN
SELECT @USER_PASSWORD = USER_PASSWORD , @ID_USER = ID_USER , @FIRSTNAME=FIRSTNAME , @LASTNAME=LASTNAME , @ROLE = 'user'
FROM USERS 
WHERE PHONENUM = @PHONENUM
END

END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckService]    Script Date: 22.05.2018 0:05:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckService]
@NAME_SERVICE NVARCHAR(50), @COUNT INT OUTPUT
AS
BEGIN
SELECT @COUNT = count(*) 
FROM SERVICES
WHERE LOWER(NAME_SERVICE) = LOWER(@NAME_SERVICE)
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spCheckUser]    Script Date: 22.05.2018 0:05:18 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spCheckUser]
@PHONENUM BIGINT, @COUNT INT OUTPUT
AS
BEGIN
SELECT @COUNT = count(*) 
FROM USERS 
WHERE PHONENUM = @PHONENUM
END;

GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spEditPrice]    Script Date: 22.05.2018 0:05:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spEditPrice]
@ID_PRICE INT,@SERVICE_ID INT, @PRICE INT, @DATE_START_PRICE DATE
AS
BEGIN
UPDATE PRICES
SET PRICE = @PRICE, DATE_START_PRICE = @DATE_START_PRICE, SERVICE_ID = @SERVICE_ID
WHERE ID_PRICE = @ID_PRICE
END;


GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spGetDoctorById]    Script Date: 22.05.2018 0:05:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spGetDoctorById]
@ID_DOCTOR INT
AS
BEGIN
SELECT * FROM DOCTORS
WHERE ID_DOCTOR = @ID_DOCTOR
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spGetEvents]    Script Date: 22.05.2018 0:05:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spGetEvents]
 @ID_DOCTOR INT
AS
    DECLARE
	 @Events table (EVENT_ID INT,ID_DOCTOR INT ,USER_ID INT ,TITLE VARCHAR(30) ,DESCRIPTIO VARCHAR(100) ,START_EVENT DATETIME ,END_EVENT DATETIME ,IS_BOOKED BIT )

    insert @Events  select EVENT_ID,ID_DOCTOR,USER_ID,TITLE,DESCRIPTIO,START_EVENT,END_EVENT,IS_BOOKED from CALENDAR_EVENT 

    select * from @Events WHERE ID_DOCTOR=@ID_DOCTOR
RETURN
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spGetPricesByService]    Script Date: 22.05.2018 0:05:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spGetPricesByService]
@SERVICE_ID INT
AS
BEGIN
SELECT * FROM PRICES
WHERE SERVICE_ID = @SERVICE_ID
ORDER BY DATE_START_PRICE DESC
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spGetService]    Script Date: 22.05.2018 0:05:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spGetService]
AS
BEGIN
SELECT * FROM SERVICES
ORDER BY NAME_SERVICE 
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spGetUserById]    Script Date: 22.05.2018 0:06:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spGetUserById]
@ID_USER INT, @FIRSTNAME VARCHAR(30) OUTPUT, @LASTNAME VARCHAR(30) OUTPUT, @PHONENUM BIGINT OUTPUT, @EMAIL VARCHAR(320) OUTPUT
AS
BEGIN
SELECT @FIRSTNAME=FIRSTNAME, @LASTNAME=LASTNAME, @PHONENUM=PHONENUM, @EMAIL = EMAIL
FROM USERS
WHERE ID_USER = @ID_USER
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spInsertPrice]    Script Date: 22.05.2018 0:06:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spInsertPrice]
@SERVICE_ID INT, @PRICE INT, @DATE_START_PRICE DATE
AS
BEGIN
INSERT INTO PRICES (SERVICE_ID,PRICE, DATE_START_PRICE)
VALUES (@SERVICE_ID, @PRICE , @DATE_START_PRICE)
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spInsertService]    Script Date: 22.05.2018 0:06:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spInsertService]
@NAME_SERVICE NVARCHAR(50), @DESCRIPTION_SERVICE NVARCHAR(150)
AS
BEGIN
INSERT INTO SERVICES(NAME_SERVICE, DESCRIPTION_SERVICE)
VALUES (@NAME_SERVICE, @DESCRIPTION_SERVICE)
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spUpdateDoctor]    Script Date: 22.05.2018 0:06:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spUpdateDoctor]
@ID INT, @FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @CABNUM TINYINT, @SPECIALITY VARCHAR(30), @ID_ROLE INT
AS
BEGIN
UPDATE DOCTORS
SET FIRSTNAME = @FIRSTNAME,
    LASTNAME = @LASTNAME,
	PHONENUM = @PHONENUM,
	CABNUM = @CABNUM,
	SPECIALITY = @SPECIALITY,
	ID_ROLE = @ID_ROLE
WHERE ID_DOCTOR = @ID;
END;
GO

USE [LV_310_DENTISTRY]
GO

/****** Object:  StoredProcedure [dbo].[spUpdateUser]    Script Date: 22.05.2018 0:06:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spUpdateUser]
@ID INT, @FIRSTNAME VARCHAR(30), @LASTNAME VARCHAR(30), @PHONENUM BIGINT, @EMAIL VARCHAR(320), @ID_ROLE INT
AS
BEGIN
UPDATE USERS
SET FIRSTNAME = @FIRSTNAME,
    LASTNAME = @LASTNAME,
	PHONENUM = @PHONENUM,
	EMAIL = @EMAIL,
	ID_ROLE = @ID_ROLE
WHERE ID_USER = @ID;
END;
GO

