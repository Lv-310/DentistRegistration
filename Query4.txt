IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'CALENDAR_EVENT')
BEGIN
	CREATE TABLE CALENDAR_EVENT(EVENT_ID INT NOT NULL,
	DOCTOR_ID INT NOT NULL,
	USER_ID INT NOT NULL,
	TITLE VARCHAR(30) NOT NULL,
	DESCRIPTIO VARCHAR(100) NOT NULL,
	START_EVENT DATETIME NOT NULL,
	END_EVENT DATETIME NOT NULL,
	IS_BOOKED BIT NOT NULL,
	CONSTRAINT PK_EVENT PRIMARY KEY (EVENT_ID),
	CONSTRAINT FK_CALENDAR_EVENT_USERS FOREIGN KEY(USER_ID)
	REFERENCES USERS(ID_USER),
	CONSTRAINT FK_CALENDAR_EVENT_DOCTORS FOREIGN KEY(DOCTOR_ID)
	REFERENCES DOCTORS(ID_DOCTOR))
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'CALENDAR_EVENT_RULE')
BEGIN
	CREATE TABLE CALENDAR_EVENT_RULE(RULE_ID INT NOT NULL,
	ISINCLUDE BIT NOT NULL,
	STARTDATE DATETIME NOT NULL,
	TIMETOFINISH TIMESTAMP NOT NULL,
	EVENTDURATION TIMESTAMP NOT NULL,
	REPEATINTERVAL TIMESTAMP NOT NULL,
	DATEEXPIRE DATETIME NOT NULL,
	CONSTRAINT PK_RULES PRIMARY KEY (RULE_ID))
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'DOCTOR_RULE')
BEGIN
	CREATE TABLE DOCTOR_RULE(RULE_ID INT NOT NULL,
	DOCTOR_ID INT NOT NULL,
	CONSTRAINT FK_DOCTOR_RULE_RULES FOREIGN KEY (RULE_ID)
	REFERENCES CALENDAR_EVENT_RULE(RULE_ID),
	CONSTRAINT FK_DOCTOR_RULE_DOCTORS FOREIGN KEY(DOCTOR_ID)
	REFERENCES DOCTORS(ID_DOCTOR))
END;




IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = 'ROLE_INFO')
BEGIN
	CREATE TABLE ROLE_INFO(ROLE_ID INT NOT NULL IDENTITY(1,1),
	ROLE_NAME VARCHAR(30) NOT NULL,
	CONSTRAINT PK_ROLE_ID PRIMARY KEY (ROLE_ID))
END;

IF (SELECT count(*) FROM ROLE_INFO) = 0
BEGIN
INSERT INTO ROLE_INFO(ROLE_NAME)
VALUES('Patient');

INSERT INTO ROLE_INFO(ROLE_NAME)
VALUES('Doctor');

INSERT INTO ROLE_INFO(ROLE_NAME)
VALUES('Admin');
END;

IF object_id('spAddEvent') IS NULL
    EXEC ('create procedure dbo.spAddEvent as select 1')
GO
ALTER PROCEDURE spAddEvent
@DOCTOR_ID INT, @USER_ID INT, @TITLE VATCHAR(30), @DESCRIPTIO VARCHAR(100),
 @START_EVENT DATETIME, @END_EVENT DATETIME, @IS_BOOKED TINYINT
AS
BEGIN
INSERT INTO CALENDAR_EVENT(DOCTOR_ID, USER_ID, TITLE, DESCRIPTIO, START_EVENT, END_EVENT, IS_BOOKED)
VALUES (@DOCTOR_ID, @USER_ID, @TITLE, @DESCRIPTIO, @START_EVENT, @END_EVENT, @IS_BOOKED)
END;

IF object_id('spAddEvent') IS NULL
    EXEC ('create procedure dbo.spAddEvent as select 1')
GO
ALTER PROCEDURE spAddEvent
@DOCTOR_ID INT, @USER_ID INT, @TITLE VATCHAR(30), @DESCRIPTIO VARCHAR(100),
 @START_EVENT DATETIME, @END_EVENT DATETIME, @IS_BOOKED TINYINT
AS
BEGIN
INSERT INTO CALENDAR_EVENT(DOCTOR_ID, USER_ID, TITLE, DESCRIPTIO, START_EVENT, END_EVENT, IS_BOOKED)
VALUES (@DOCTOR_ID, @USER_ID, @TITLE, @DESCRIPTIO, @START_EVENT, @END_EVENT, @IS_BOOKED)
END;



